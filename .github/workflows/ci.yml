name: CI

on:
  push:
    branches: [main]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  schedule:
    # Nightly runs at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # Fast path for PRs and branches
  fast-path:
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --group dev

      - name: Lint
        run: |
          uv run ruff format src tests --check
          uv run ruff check src tests

      - name: Typecheck
        run: uv run mypy src tests

      - name: Unit tests (all tests, algorithm coverage only)
        run: |
          # Run all tests but only measure coverage for algorithms
          uv run pytest tests -m "not slow" -c pytest-algorithms.ini --cov-report=xml:coverage-algorithms.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  # Thorough path for main branch and nightly
  thorough-path:
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2-dev \
            libpango1.0-dev \
            pkg-config \
            python3-dev \
            libffi-dev \
            libssl-dev \
            libjpeg-dev \
            libpng-dev \
            libfreetype6-dev \
            libx11-dev \
            libxext-dev \
            libxrender-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            libxss1 \
            libxrandr2 \
            libasound2t64 \
            libpangocairo-1.0-0 \
            libpangoft2-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libgtk-3-0 \
            libx11-6 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            # Box2D dependencies
            libswig-dev \
            swig \
            # Additional dependencies for manim
            libgl1-mesa-glx \
            libglib2.0-0 \
            libxrandr2 \
            libxinerama1 \
            libxcursor1 \
            libxi6 \
            libxss1

      - name: Install system dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config cairo pango gdk-pixbuf libffi swig

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --group dev --group docs

      - name: Lint
        run: |
          uv run ruff format src tests --check
          uv run ruff check src tests

      - name: Typecheck
        run: uv run mypy src tests

      - name: Full unit suite (all tests, algorithm coverage only)
        run: |
          # Run all tests but only measure coverage for algorithms
          uv run pytest tests -c pytest-algorithms.ini --cov-report=xml:coverage-algorithms.xml --cov-report=html:htmlcov-algorithms

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

      - name: Generate coverage badge
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Coverage badge generation would go here
          echo "Coverage badge generation placeholder"

  # Optional non-blocking jobs
  xenon-report:
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2-dev \
            libpango1.0-dev \
            pkg-config \
            python3-dev \
            libffi-dev \
            libssl-dev \
            libjpeg-dev \
            libpng-dev \
            libfreetype6-dev \
            libx11-dev \
            libxext-dev \
            libxrender-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            libxss1 \
            libxrandr2 \
            libasound2t64 \
            libpangocairo-1.0-0 \
            libpangoft2-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libgtk-3-0 \
            libx11-6 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            # Box2D dependencies
            libswig-dev \
            swig \
            # Additional dependencies for manim
            libgl1-mesa-glx \
            libglib2.0-0 \
            libxrandr2 \
            libxinerama1 \
            libxcursor1 \
            libxi6 \
            libxss1

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --group dev

      - name: Xenon complexity report
        run: |
          echo "üîç Generating complexity report..."
          uv run xenon --max-absolute B src || echo "‚ö†Ô∏è  Complexity issues found"

  demo-smoke-test:
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcairo2-dev \
            libpango1.0-dev \
            pkg-config \
            python3-dev \
            libffi-dev \
            libssl-dev \
            libjpeg-dev \
            libpng-dev \
            libfreetype6-dev \
            libx11-dev \
            libxext-dev \
            libxrender-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            libxss1 \
            libxrandr2 \
            libasound2t64 \
            libpangocairo-1.0-0 \
            libpangoft2-1.0-0 \
            libgdk-pixbuf2.0-0 \
            libgtk-3-0 \
            libx11-6 \
            libxcomposite1 \
            libxcursor1 \
            libxdamage1 \
            libxext6 \
            libxfixes3 \
            libxi6 \
            libxrandr2 \
            libxrender1 \
            libxss1 \
            libxtst6 \
            # Box2D dependencies
            libswig-dev \
            swig \
            # Additional dependencies for manim
            libgl1-mesa-glx \
            libglib2.0-0 \
            libxrandr2 \
            libxinerama1 \
            libxcursor1 \
            libxi6 \
            libxss1

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync --group dev

      - name: Demo smoke test
        run: |
          echo "üöÄ Running demo smoke tests..."
          # Add demo commands here when available
          echo "Demo smoke test placeholder"
